# This settings file is intended to be used as the second-half of a 
# SplitSetting as described on the django wiki. See:
# http://code.djangoproject.com/wiki/SplitSettings#Multiplesettingfilesimportingfromeachother
# It will be imported at the end of settings.py
# Here you should define your database and email connection settings, as well
# as any GeoDjango settings. You can also specify where media is located on
# your filesystem. Settings defined here will override those in settings.py.

# At the very least, ensure that production setups have their own SECRET_KEY
# that is kept hidden from public repositories.
# SECRET_KEY = '3j9~fjio+adjf93jda()#Jfk3ljf-ea9#$@#90dsfj9@0aj3()*fj3iow2f'

# The following Google key is for localhost:
# GOOGLE_API_KEY = 'ABQIAAAAu2dobIiH7nisivwmaz2gDhT2yXp_ZAY8_ufC3CFXhHIE1NvwkxSLaQmJjJuOq03hTEjc-cNV8eegYg' 

# You'll want to specify any database connection info here:
DATABASES = {
    'default': {
        'ENGINE': 'django.contrib.gis.db.backends.postgis',
        'NAME': '<%= node[:dbname] %>',
        'USER': 'postgres',
     }
}

SOCKET_URL = '<%= node[:socketurl] %>'

# This should be a local folder created for use with the install_media command 
# MEDIA_ROOT = '/usr/local/apps/marco-portal/mediaroot/'

# Uncomment this line to cause Madrona to go into maintenance mode
# It will not be accessible without logging in as staff
# See http://pypi.python.org/pypi/django-maintenancemode
# MAINTENANCE_MODE = True

# And to run tests correctly, tell Django what your spatial database template is...
# POSTGIS_TEMPLATE='template_postgis'
# ...and uncomment TEST_RUNNER
# TEST_RUNNER='django.contrib.gis.tests.run_tests'

# This should be set to 1 (for localhost), 2 (for dev server), or 3 (for production)
# SITE_ID = 1
